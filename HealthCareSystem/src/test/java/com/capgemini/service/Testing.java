package com.capgemini.service;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;

import com.capgemini.dto.DiagnosticCenter;
import com.capgemini.service.ServiceImplementation;
import com.capgemini.service.Validation;
import com.capgemini.util.CollectionUtil;
import com.capgemini.dto.CenterTest;;

class Testing {

	ServiceImplementation si=new ServiceImplementation();
	Validation v = new Validation();
	
	@ParameterizedTest
	@ValueSource(strings= {"Deva Diagnostic Center","Satish","Sai Chaitanya Diagnostic Center"})
	void testingAddCenter(String centerName)
	{
		assertEquals(true,si.addCenter(new DiagnosticCenter(CollectionUtil.centerAutogeneratedId(),centerName)));
	}
	
	@Test
	void testingRemoveCenter()
	{
		assertEquals(true,si.removeCenter(new  DiagnosticCenter("C1", "Sai Chaitanya Diagnostic Center")));
	}
	
	@Test
	void testingAddTest()
	{
		assertEquals("test added successfully",si.addTest(CollectionUtil.centerList.get(0),new CenterTest(CollectionUtil.testAutogeneratedId(),"jaundice")));
	}
	
	@Test
	void testingRemoveTest()
	{
		assertEquals(true,si.removeTest(CollectionUtil.centerList.get(1),CollectionUtil.listOfTests1.get(0)));
	}
	
	@Test
	void checkingGetCenterObjectOfcenterId()
	{
		assertEquals(CollectionUtil.centerList.get(0),si.getCenterObjectOfcenterId("C1"));
	}
	
	@Test
	void checkingIsCenterNamePresent()
	{
		assertEquals(true,si.isCenterNamePresent("Sai Chaitanya Diagnostic Center"));
	}
	
	@Test
	void checkingIsCenterIdPresent()
	{
		assertEquals(true,si.isCenterIdPresent("C1"));
	}
	
	@Test
	void checkingGetTestObject()
	{
		assertEquals(CollectionUtil.listOfTests1.get(1),si.getTestObject(CollectionUtil.centerList.get(0), "T2"));
	}
	
	@Test
	void checkingIsTestNamePresent()
	{
		assertEquals(true,si.isTestNamePresent(CollectionUtil.centerList.get(0),"blood pressure"));
	}
	
	@ParameterizedTest
	@ValueSource(strings= {"T1","T2","T3"})
	void checkingIsTestIdPresent(String testId)
	{
		assertEquals(true,si.isTestIdPresent(CollectionUtil.centerList.get(0), testId));
	}
	
	@ParameterizedTest
	@ValueSource(strings= {"Satyam","raj diagnostic center","Sai Chaitanya Diagnostic Center"})
	void testingValidateCenterName(String centerName)
	{
		assertEquals(true,v.validateCenterName(centerName));
	}
	
	@ParameterizedTest
	@ValueSource(strings= {"C1","C8","c2"})
	void testingValidateCenterId(String centerId)
	{
		assertEquals(true,v.validateCenterId(centerId));
	}
	
	@ParameterizedTest
	@ValueSource(strings= {"urine test","jaundice test","blood group"})
	void testingvalidateCenterTest(String testName)
	{
		assertEquals(true,v.validateCenterTest(CollectionUtil.centerList.get(1), testName));
	}
	
	@ParameterizedTest
	@ValueSource(strings= {"T4","t5","T6"})
	void testingValidateCenterTestId(String testId)
	{
		assertEquals(true,v.validateCenterTestId(CollectionUtil.centerList.get(1),testId));
	}
	
}
